/** Declaration file generated by dts-gen */
declare namespace polycrc {
	export class CRC {
		// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
		constructor(width: number, poly: number, xor_in: number, xor_out: number, reflect: boolean);

		calculate(buffer: Buffer | string | number): number;

		calculate_no_table(buffer: Buffer | string | number): number;

		gen_table(): Int32Array;

		print_table(): string;

		crc_shift: number;
		mask: number;
		msb_mask: number;
		poly: number;
		reflect: boolean;
		reflected_xor_in: number;
		shifted_xor_in: number;
		table: Int32Array;
		width: number;
		xor_in: number;
		xor_out: number;
	}

	export const models: {
		crc1: CRC;
		crc10: CRC;
		crc16: CRC;
		crc24: CRC;
		crc32: CRC;
		crc32c: CRC;
		crc6: CRC;
		crc8: CRC;
	};

	export function crc(
		width: number,
		poly: number,
		xor_in: number,
		xor_out: number,
		reflect: boolean,
	): (buffer: Buffer | string | number) => number;

	export function crc1(buffer: Buffer | string | number): number;

	export function crc10(buffer: Buffer | string | number): number;

	export function crc16(buffer: Buffer | string | number): number;

	export function crc24(buffer: Buffer | string | number): number;

	export function crc32(buffer: Buffer | string | number): number;

	export function crc32c(buffer: Buffer | string | number): number;

	export function crc6(buffer: Buffer | string | number): number;

	export function crc8(buffer: Buffer | string | number): number;
}
